// TCliente.pas
unit TCliente;

interface

uses
  System.SysUtils, System.Classes, Data.DB, FireDAC.Comp.Client;

type
  TCliente = class
  private
    FCodigo: Integer;
    FNome: string;
    FCidade: string;
    FUf: string;
  public
    property Codigo: Integer read FCodigo write FCodigo;
    property Nome: string read FNome write FNome;
    property Cidade: string read FCidade write FCidade;
    property Uf: string read FUf write FUf;

    procedure Carregar(Query: TFDQuery);
    procedure Salvar(Query: TFDQuery);
    procedure Excluir(Query: TFDQuery);
  end;

implementation

{ TCliente }

procedure TCliente.Carregar(Query: TFDQuery);
begin
  Query.SQL.Clear;
  Query.SQL.Add('SELECT * FROM clientes WHERE codigo = :id');
  Query.ParamByName('id').AsInteger := FId;
  Query.Open;

  if not Query.IsEmpty then
  begin
    FNome := Query.FieldByName('nome').AsString;
    FCidade := Query.FieldByName('cidade').AsString;
    FUf := Query.FieldByName('uf').AsString;
  end;
end;

procedure TCliente.Salvar(Query: TFDQuery);
begin
  Query.SQL.Clear;
  if FCodigo = 0 then
  begin
    Query.SQL.Add('INSERT INTO clientes (nome, cidade, uf)');
    Query.SQL.Add('VALUES (:nome, :cidade, :uf)');
  end
  else
  begin
    Query.SQL.Add('UPDATE clientes SET');
    Query.SQL.Add('nome = :nome, cidade = :cidade, uf = :uf');
    Query.SQL.Add('WHERE codigo = :id');
    Query.ParamByName('id').AsInteger := FCodigo;
  end;

  Query.ParamByName('nome').AsString := FNome;
  Query.ParamByName('cidade').AsString := FCidade;
  Query.ParamByName('uf').AsString := FUf;
  Query.ExecSQL;
end;

procedure TCliente.Excluir(Query: TFDQuery);
begin
  Query.SQL.Clear;
  Query.SQL.Add('DELETE FROM clientes WHERE codigo = :id');
  Query.ParamByName('id').AsInteger := FCodigo;
  Query.ExecSQL;
end;

end.
